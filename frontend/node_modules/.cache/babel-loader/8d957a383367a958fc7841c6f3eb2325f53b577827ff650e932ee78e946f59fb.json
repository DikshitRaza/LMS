{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\r\n * The most commonly used EAN standard is\r\n * the thirteen-digit EAN-13, while the\r\n * less commonly used 8-digit EAN-8 barcode was\r\n * introduced for use on small packages.\r\n * Also EAN/UCC-14 is used for Grouping of individual\r\n * trade items above unit level(Intermediate, Carton or Pallet).\r\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\r\n * EAN consists of:\r\n * GS1 prefix, manufacturer code, product code and check digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n * Reference: https://www.gtin.info/\r\n */\n\n/**\r\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\r\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\r\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\r\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n/**\r\n * Get position weight given:\r\n * EAN length and digit index/position\r\n *\r\n * @param {number} length\r\n * @param {number} index\r\n * @return {number}\r\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\r\n * Calculate EAN Check Digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n *\r\n * @param {string} ean\r\n * @return {number}\r\n */\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\r\n * Check if string is valid EAN:\r\n * Matches EAN-8/EAN-13/EAN-14 regex\r\n * Has valid check digit.\r\n *\r\n * @param {string} str\r\n * @return {boolean}\r\n */\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}