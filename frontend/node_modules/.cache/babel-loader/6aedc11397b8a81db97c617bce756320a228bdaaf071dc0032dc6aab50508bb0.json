{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\";\nimport React from 'react';\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/Tables.js\";\nimport UserPage from \"views/User.js\";\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\nimport BatchManager from \"views/BatchManager.js\";\nimport Courses from \"views/Courses\";\nimport Liveclass from \"views/Liveclass\";\nimport QandA from \"views/QandA\";\nimport UpgradeToPro from \"views/Upgrade.js\";\n\n// Function to get user's category from session\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getUserCategory() {\n  const email = sessionStorage.getItem(\"email\");\n  try {\n    // Make an API call to your backend to retrieve the user's category\n    const response = await fetch(\"http://localhost:3001/api/user/category?email=\".concat(email));\n    const data = await response.json();\n\n    // Assuming the response contains a 'category' field\n    return data.category;\n  } catch (error) {\n    console.error(\"Error fetching user category:\", error);\n    return 'default'; // Return a default category in case of error\n  }\n}\n\n// Initial routes without conditional components\nlet routes = [];\n\n// Get user category\nconst userCategory = getUserCategory();\n\n// Conditionally include components based on user's category\nif (userCategory === 'Student') {\n  routes.push({\n    path: \"/Liveclass\",\n    name: \"My Classes\",\n    icon: \"nc-icon nc-time-alarm\",\n    component: /*#__PURE__*/_jsxDEV(Liveclass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/Courses\",\n    name: \"My Courses\",\n    icon: \"nc-icon nc-single-copy-04\",\n    component: /*#__PURE__*/_jsxDEV(Courses, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/QandA\",\n    name: \"Question and Answer\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: /*#__PURE__*/_jsxDEV(QandA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  });\n} else if (userCategory === 'admin') {\n  routes.push({\n    path: \"/upgrade\",\n    name: \"Manage Certification\",\n    icon: \"nc-icon nc-trophy\",\n    component: /*#__PURE__*/_jsxDEV(UpgradeToPro, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/Icons\",\n    name: \"Manage Student\",\n    icon: \"nc-icon nc-single-02\",\n    component: /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/notifications\",\n    name: \"Manage Faculties\",\n    icon: \"nc-icon nc-hat-3\",\n    component: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/ManageCoursePage\",\n    name: \"Manage Course\",\n    icon: \"nc-icon nc-book-bookmark\",\n    component: /*#__PURE__*/_jsxDEV(ManageCoursePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/BatchManager\",\n    name: \"Batch Manage\",\n    icon: \"nc-icon nc-watch-time\",\n    component: /*#__PURE__*/_jsxDEV(BatchManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/tables\",\n    name: \"Manage Schedule\",\n    icon: \"nc-icon nc-calendar-60\",\n    component: /*#__PURE__*/_jsxDEV(TableList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/typography\",\n    name: \"Manage Exam\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this),\n    layout: \"/admin\"\n  });\n} else {\n  // Default route if the user category is neither 'Student' nor 'admin'\n  routes.push({\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 18\n    }, this),\n    layout: \"/admin\"\n  }, {\n    path: \"/user-page\",\n    name: \"Profile\",\n    icon: \"nc-icon nc-bookmark-2\",\n    component: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }, this),\n    layout: \"/admin\",\n    category: \"admin\"\n  });\n}\nexport default routes;","map":{"version":3,"names":["React","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","getUserCategory","email","sessionStorage","getItem","response","fetch","concat","data","json","category","error","console","routes","userCategory","push","path","name","icon","component","fileName","_jsxFileName","lineNumber","columnNumber","layout"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React from 'react';\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/Tables.js\";\r\nimport UserPage from \"views/User.js\";\r\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\r\nimport BatchManager from \"views/BatchManager.js\";\r\nimport Courses from \"views/Courses\";\r\nimport Liveclass from \"views/Liveclass\";\r\nimport QandA from \"views/QandA\";\r\nimport UpgradeToPro from \"views/Upgrade.js\";\r\n\r\n// Function to get user's category from session\r\nasync function getUserCategory() {\r\n  const email = sessionStorage.getItem(\"email\");\r\n\r\n  try {\r\n    // Make an API call to your backend to retrieve the user's category\r\n    const response = await fetch(`http://localhost:3001/api/user/category?email=${email}`);\r\n    const data = await response.json();\r\n    \r\n    // Assuming the response contains a 'category' field\r\n    return data.category;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user category:\", error);\r\n    return 'default'; // Return a default category in case of error\r\n  }\r\n}\r\n\r\n\r\n// Initial routes without conditional components\r\nlet routes = [\r\n \r\n  \r\n];\r\n\r\n// Get user category\r\nconst userCategory = getUserCategory();\r\n\r\n// Conditionally include components based on user's category\r\nif (userCategory === 'Student') {\r\n  routes.push({\r\n    path: \"/Liveclass\",\r\n    name: \"My Classes\",\r\n    icon: \"nc-icon nc-time-alarm\",\r\n    component: <Liveclass />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Courses\",\r\n    name: \"My Courses\",\r\n    icon: \"nc-icon nc-single-copy-04\",\r\n    component: <Courses />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/QandA\",\r\n    name: \"Question and Answer\",\r\n    icon: \"nc-icon nc-bullet-list-67\",\r\n    component: <QandA />,\r\n    layout: \"/admin\",\r\n  },\r\n  );\r\n} else if (userCategory === 'admin') {\r\n  routes.push({\r\n    path: \"/upgrade\",\r\n    name: \"Manage Certification\",\r\n    icon: \"nc-icon nc-trophy\",\r\n    component: <UpgradeToPro />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Icons\",\r\n    name: \"Manage Student\",\r\n    icon: \"nc-icon nc-single-02\",\r\n    component: <Icons />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/notifications\",\r\n    name: \"Manage Faculties\",\r\n    icon: \"nc-icon nc-hat-3\",\r\n    component: <Notifications />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/ManageCoursePage\",\r\n    name: \"Manage Course\",\r\n    icon: \"nc-icon nc-book-bookmark\",\r\n    component: <ManageCoursePage />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/BatchManager\",\r\n    name: \"Batch Manage\",\r\n    icon: \"nc-icon nc-watch-time\",\r\n    component: <BatchManager />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/tables\",\r\n    name: \"Manage Schedule\",\r\n    icon: \"nc-icon nc-calendar-60\",\r\n    component: <TableList />,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/typography\",\r\n    name: \"Manage Exam\",\r\n    icon: \"nc-icon nc-ruler-pencil\",\r\n    component: <Typography />,\r\n    layout: \"/admin\",\r\n  },\r\n  \r\n  );\r\n} else {\r\n  // Default route if the user category is neither 'Student' nor 'admin'\r\n  routes.push(\r\n    {\r\n      path: \"/dashboard\",\r\n      name: \"Dashboard\",\r\n      icon: \"nc-icon nc-chart-bar-32\",\r\n      component: <Dashboard />,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/user-page\",\r\n      name: \"Profile\",\r\n      icon: \"nc-icon nc-bookmark-2\",\r\n      component: <UserPage />,\r\n      layout: \"/admin\",\r\n      category:\"admin\"\r\n    }\r\n  );\r\n}\r\n\r\nexport default routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}