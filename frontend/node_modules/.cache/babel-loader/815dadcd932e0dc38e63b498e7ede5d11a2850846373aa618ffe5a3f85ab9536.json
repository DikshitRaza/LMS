{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/Tables.js\";\nimport UserPage from \"views/User.js\";\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\nimport BatchManager from \"views/BatchManager.js\";\nimport Courses from \"views/Courses\";\nimport Liveclass from \"views/Liveclass\";\nimport QandA from \"views/QandA\";\nimport UpgradeToPro from \"views/Upgrade.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = () => {\n  _s();\n  const [userType, setUserType] = useState('');\n  const [userRoutes, setUserRoutes] = useState([]);\n  useEffect(() => {\n    const userEmail = sessionStorage.getItem('email');\n    const fetchUserType = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/api/userType?email=\".concat(userEmail));\n        const data = await response.json();\n        setUserType(data.userType);\n      } catch (error) {\n        console.error('Error fetching user type:', error);\n      }\n    };\n    fetchUserType();\n  }, []); // Run the effect only once on component mount\n\n  useEffect(() => {\n    // Define routes based on user type\n    if (userType === 'Student') {\n      setUserRoutes([{\n        path: \"/Liveclass\",\n        name: \"My Classes\",\n        icon: \"nc-icon nc-time-alarm\",\n        component: /*#__PURE__*/_jsxDEV(Liveclass, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/Courses\",\n        name: \"My Courses\",\n        icon: \"nc-icon nc-single-copy-04\",\n        component: /*#__PURE__*/_jsxDEV(Courses, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/QandA\",\n        name: \"Question and Answer\",\n        icon: \"nc-icon nc-bullet-list-67\",\n        component: /*#__PURE__*/_jsxDEV(QandA, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }]);\n    } else if (userType === 'admin') {\n      setUserRoutes([{\n        path: \"/upgrade\",\n        name: \"Manage Certification\",\n        icon: \"nc-icon nc-trophy\",\n        component: /*#__PURE__*/_jsxDEV(UpgradeToPro, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/Icons\",\n        name: \"Manage Student\",\n        icon: \"nc-icon nc-single-02\",\n        component: /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/notifications\",\n        name: \"Manage Faculties\",\n        icon: \"nc-icon nc-hat-3\",\n        component: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/ManageCoursePage\",\n        name: \"Manage Course\",\n        icon: \"nc-icon nc-book-bookmark\",\n        component: /*#__PURE__*/_jsxDEV(ManageCoursePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/BatchManager\",\n        name: \"Batch Manage\",\n        icon: \"nc-icon nc-watch-time\",\n        component: /*#__PURE__*/_jsxDEV(BatchManager, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/tables\",\n        name: \"Manage Schedule\",\n        icon: \"nc-icon nc-calendar-60\",\n        component: /*#__PURE__*/_jsxDEV(TableList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/typography\",\n        name: \"Manage Exam\",\n        icon: \"nc-icon nc-ruler-pencil\",\n        component: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }]);\n    } else {\n      // Default route if the user category is neither 'Student' nor 'admin'\n      setUserRoutes([{\n        path: \"/dashboard\",\n        name: \"Dashboard\",\n        icon: \"nc-icon nc-chart-bar-32\",\n        component: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }, {\n        path: \"/user-page\",\n        name: \"Profile\",\n        icon: \"nc-icon nc-bookmark-2\",\n        component: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 22\n        }, this),\n        layout: \"/admin\"\n      }]);\n    }\n  }, [userType]);\n  return userRoutes;\n};\n_s(routes, \"4ZD9hnsoa9xRwAliJ1thEADAbkU=\");\nexport default routes;","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","routes","_s","userType","setUserType","userRoutes","setUserRoutes","userEmail","sessionStorage","getItem","fetchUserType","response","fetch","concat","data","json","error","console","path","name","icon","component","fileName","_jsxFileName","lineNumber","columnNumber","layout"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/Tables.js\";\r\nimport UserPage from \"views/User.js\";\r\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\r\nimport BatchManager from \"views/BatchManager.js\";\r\nimport Courses from \"views/Courses\";\r\nimport Liveclass from \"views/Liveclass\";\r\nimport QandA from \"views/QandA\";\r\nimport UpgradeToPro from \"views/Upgrade.js\";\r\n\r\nconst routes = () => {\r\n  const [userType, setUserType] = useState('');\r\n  const [userRoutes, setUserRoutes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const userEmail = sessionStorage.getItem('email');\r\n\r\n    const fetchUserType = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/api/userType?email=${userEmail}`);\r\n        const data = await response.json();\r\n\r\n        setUserType(data.userType);\r\n      } catch (error) {\r\n        console.error('Error fetching user type:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserType();\r\n  }, []); // Run the effect only once on component mount\r\n\r\n  useEffect(() => {\r\n    // Define routes based on user type\r\n    if (userType === 'Student') {\r\n      setUserRoutes([\r\n        {\r\n          path: \"/Liveclass\",\r\n          name: \"My Classes\",\r\n          icon: \"nc-icon nc-time-alarm\",\r\n          component: <Liveclass />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/Courses\",\r\n          name: \"My Courses\",\r\n          icon: \"nc-icon nc-single-copy-04\",\r\n          component: <Courses />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/QandA\",\r\n          name: \"Question and Answer\",\r\n          icon: \"nc-icon nc-bullet-list-67\",\r\n          component: <QandA />,\r\n          layout: \"/admin\",\r\n        }\r\n      ]);\r\n    } else if (userType === 'admin') {\r\n      setUserRoutes([\r\n        {\r\n          path: \"/upgrade\",\r\n          name: \"Manage Certification\",\r\n          icon: \"nc-icon nc-trophy\",\r\n          component: <UpgradeToPro />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/Icons\",\r\n          name: \"Manage Student\",\r\n          icon: \"nc-icon nc-single-02\",\r\n          component: <Icons />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/notifications\",\r\n          name: \"Manage Faculties\",\r\n          icon: \"nc-icon nc-hat-3\",\r\n          component: <Notifications />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/ManageCoursePage\",\r\n          name: \"Manage Course\",\r\n          icon: \"nc-icon nc-book-bookmark\",\r\n          component: <ManageCoursePage />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/BatchManager\",\r\n          name: \"Batch Manage\",\r\n          icon: \"nc-icon nc-watch-time\",\r\n          component: <BatchManager />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/tables\",\r\n          name: \"Manage Schedule\",\r\n          icon: \"nc-icon nc-calendar-60\",\r\n          component: <TableList />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/typography\",\r\n          name: \"Manage Exam\",\r\n          icon: \"nc-icon nc-ruler-pencil\",\r\n          component: <Typography />,\r\n          layout: \"/admin\",\r\n        }\r\n      ]);\r\n    } else {\r\n      // Default route if the user category is neither 'Student' nor 'admin'\r\n      setUserRoutes([\r\n        {\r\n          path: \"/dashboard\",\r\n          name: \"Dashboard\",\r\n          icon: \"nc-icon nc-chart-bar-32\",\r\n          component: <Dashboard />,\r\n          layout: \"/admin\",\r\n        },\r\n        {\r\n          path: \"/user-page\",\r\n          name: \"Profile\",\r\n          icon: \"nc-icon nc-bookmark-2\",\r\n          component: <UserPage />,\r\n          layout: \"/admin\",\r\n        }\r\n      ]);\r\n    }\r\n  }, [userType]);\r\n\r\n  return userRoutes;\r\n};\r\n\r\nexport default routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}