{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\views\\\\BatchManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Table, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = _ref => {\n  let {\n    batches,\n    deleteBatch,\n    pageCount,\n    handlePageClick,\n    studentsPerPage,\n    studentPage,\n    handleStudentPageClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Batch ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Enrolled Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: batches.map(batch => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: batch.batchID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: batch.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: batch.enrolledStudents.slice(studentPage * studentsPerPage, (studentPage + 1) * studentsPerPage).map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: student\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              previousLabel: 'Previous',\n              nextLabel: 'Next',\n              breakLabel: '...',\n              pageCount: Math.ceil(batch.enrolledStudents.length / studentsPerPage),\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handleStudentPageClick,\n              containerClassName: 'pagination',\n              activeClassName: 'active'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              onClick: () => deleteBatch(batch._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, batch._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: 'Previous',\n      nextLabel: 'Next',\n      breakLabel: '...',\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageClick,\n      containerClassName: 'pagination',\n      activeClassName: 'active'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = TableComponent;\nconst BatchManagerPage = () => {\n  _s();\n  const [batches, setBatches] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [newBatch, setNewBatch] = useState({\n    batchID: '',\n    subject: '',\n    enrolledStudents: []\n  });\n  const [currentPage, setCurrentPage] = useState(0);\n  const [studentPage, setStudentPage] = useState(0);\n  const studentsPerPage = 5; // Change as needed\n\n  useEffect(() => {\n    fetchSubjects();\n    fetchBatches();\n  }, []);\n  const fetchSubjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/fetchSubjects');\n      setSubjects(response.data);\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n  };\n  const fetchBatches = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/fetchBatches');\n      setBatches(response.data);\n    } catch (error) {\n      console.error('Error fetching batches:', error);\n    }\n  };\n  const fetchStudents = async selectedSubject => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/fetchStudents/\".concat(selectedSubject));\n      setStudents(response.data);\n    } catch (error) {\n      console.error('Error fetching students:', error);\n    }\n  };\n  const deleteBatch = async batchID => {\n    try {\n      await axios.delete(\"http://localhost:3001/deleteBatch/\".concat(batchID));\n      setBatches(batches.filter(batch => batch._id !== batchID));\n    } catch (error) {\n      console.error('Error deleting batch:', error);\n    }\n  };\n  const handleSubjectChange = async event => {\n    const selectedSubject = event.target.value;\n    setSelectedSubject(selectedSubject);\n    setNewBatch(prevBatch => ({\n      ...prevBatch,\n      batchID: \"\".concat(selectedSubject, \"_batch_\").concat(String(batches.length + 1).padStart(4, '0')),\n      subject: selectedSubject\n    }));\n    await fetchStudents(selectedSubject);\n  };\n  const handleCheckboxChange = studentId => {\n    if (selectedStudents.includes(studentId)) {\n      setSelectedStudents(selectedStudents.filter(id => id !== studentId));\n    } else {\n      setSelectedStudents([...selectedStudents, studentId]);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      await axios.post('http://localhost:3001/addBatch', {\n        ...newBatch,\n        enrolledStudents: selectedStudents\n      });\n      setBatches([...batches, {\n        ...newBatch,\n        enrolledStudents: selectedStudents\n      }]);\n      setIsFormOpen(false);\n      setNewBatch({\n        batchID: '',\n        subject: '',\n        enrolledStudents: []\n      });\n    } catch (error) {\n      console.error('Error adding batch:', error);\n    }\n  };\n  const handlePageClick = _ref2 => {\n    let {\n      selected\n    } = _ref2;\n    setCurrentPage(selected);\n  };\n  const handleStudentPageClick = _ref3 => {\n    let {\n      selected\n    } = _ref3;\n    setStudentPage(selected);\n  };\n  const pageCount = Math.ceil(students.length / studentsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: \"Manage Batches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-category\",\n              children: \"Add and manage batches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => setIsFormOpen(true),\n              children: \"Add Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), isFormOpen && /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                form: true,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"subject\",\n                      children: \"Select Subject:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"select\",\n                      id: \"subject\",\n                      value: selectedSubject,\n                      onChange: handleSubjectChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 27\n                      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: subject.name,\n                        children: subject.name\n                      }, subject._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"batchID\",\n                      children: \"Batch ID:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      id: \"batchID\",\n                      value: newBatch.batchID,\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  children: \"Enroll Students:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                onClick: handleSubmit,\n                disabled: !selectedSubject || selectedStudents.length === 0,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableComponent, {\n              batches: batches,\n              deleteBatch: deleteBatch,\n              pageCount: pageCount,\n              handlePageClick: handlePageClick,\n              studentsPerPage: studentsPerPage,\n              studentPage: studentPage,\n              handleStudentPageClick: handleStudentPageClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(BatchManagerPage, \"ucrzBkd4OKzn+4OxHLyI40ibga4=\");\n_c2 = BatchManagerPage;\nexport default BatchManagerPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TableComponent\");\n$RefreshReg$(_c2, \"BatchManagerPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardHeader","CardBody","CardTitle","Row","Col","Table","Button","Form","FormGroup","Label","Input","ReactPaginate","jsxDEV","_jsxDEV","TableComponent","_ref","batches","deleteBatch","pageCount","handlePageClick","studentsPerPage","studentPage","handleStudentPageClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","batch","batchID","subject","enrolledStudents","slice","student","index","previousLabel","nextLabel","breakLabel","Math","ceil","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","color","onClick","_id","_c","BatchManagerPage","_s","setBatches","subjects","setSubjects","students","setStudents","selectedSubject","setSelectedSubject","selectedStudents","setSelectedStudents","isFormOpen","setIsFormOpen","newBatch","setNewBatch","currentPage","setCurrentPage","setStudentPage","fetchSubjects","fetchBatches","response","get","data","error","console","fetchStudents","concat","delete","filter","handleSubjectChange","event","target","value","prevBatch","String","padStart","handleCheckboxChange","studentId","includes","id","handleSubmit","post","_ref2","selected","_ref3","className","md","tag","form","for","type","onChange","name","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/views/BatchManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Table, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst TableComponent = ({ batches, deleteBatch, pageCount, handlePageClick, studentsPerPage, studentPage, handleStudentPageClick }) => {\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Batch ID</th>\r\n            <th>Subject</th>\r\n            <th>Enrolled Students</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {batches.map((batch) => (\r\n            <tr key={batch._id}>\r\n              <td>{batch.batchID}</td>\r\n              <td>{batch.subject}</td>\r\n              <td>\r\n                <ul>\r\n                  {batch.enrolledStudents.slice(studentPage * studentsPerPage, (studentPage + 1) * studentsPerPage).map((student, index) => (\r\n                    <li key={index}>{student}</li>\r\n                  ))}\r\n                </ul>\r\n                <ReactPaginate\r\n                  previousLabel={'Previous'}\r\n                  nextLabel={'Next'}\r\n                  breakLabel={'...'}\r\n                  pageCount={Math.ceil(batch.enrolledStudents.length / studentsPerPage)}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={handleStudentPageClick}\r\n                  containerClassName={'pagination'}\r\n                  activeClassName={'active'}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Button color=\"danger\" onClick={() => deleteBatch(batch._id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <ReactPaginate\r\n        previousLabel={'Previous'}\r\n        nextLabel={'Next'}\r\n        breakLabel={'...'}\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={'pagination'}\r\n        activeClassName={'active'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BatchManagerPage = () => {\r\n  const [batches, setBatches] = useState([]);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [newBatch, setNewBatch] = useState({\r\n    batchID: '',\r\n    subject: '',\r\n    enrolledStudents: []\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [studentPage, setStudentPage] = useState(0);\r\n  const studentsPerPage = 5; // Change as needed\r\n\r\n  useEffect(() => {\r\n    fetchSubjects();\r\n    fetchBatches();\r\n  }, []);\r\n\r\n  const fetchSubjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/fetchSubjects');\r\n      setSubjects(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching subjects:', error);\r\n    }\r\n  };\r\n\r\n  const fetchBatches = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/fetchBatches');\r\n      setBatches(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching batches:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async (selectedSubject) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/fetchStudents/${selectedSubject}`);\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error);\r\n    }\r\n  };\r\n\r\n  const deleteBatch = async (batchID) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/deleteBatch/${batchID}`);\r\n      setBatches(batches.filter(batch => batch._id !== batchID));\r\n    } catch (error) {\r\n      console.error('Error deleting batch:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubjectChange = async (event) => {\r\n    const selectedSubject = event.target.value;\r\n    setSelectedSubject(selectedSubject);\r\n    setNewBatch(prevBatch => ({\r\n      ...prevBatch,\r\n      batchID: `${selectedSubject}_batch_${String(batches.length + 1).padStart(4, '0')}`,\r\n      subject: selectedSubject\r\n    }));\r\n    await fetchStudents(selectedSubject);\r\n  };\r\n\r\n  const handleCheckboxChange = (studentId) => {\r\n    if (selectedStudents.includes(studentId)) {\r\n      setSelectedStudents(selectedStudents.filter(id => id !== studentId));\r\n    } else {\r\n      setSelectedStudents([...selectedStudents, studentId]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/addBatch', { ...newBatch, enrolledStudents: selectedStudents });\r\n      setBatches([...batches, { ...newBatch, enrolledStudents: selectedStudents }]);\r\n      setIsFormOpen(false);\r\n      setNewBatch({ batchID: '', subject: '', enrolledStudents: [] });\r\n    } catch (error) {\r\n      console.error('Error adding batch:', error);\r\n    }\r\n  };\r\n\r\n  const handlePageClick = ({ selected }) => {\r\n    setCurrentPage(selected);\r\n  };\r\n\r\n  const handleStudentPageClick = ({ selected }) => {\r\n    setStudentPage(selected);\r\n  };\r\n\r\n  const pageCount = Math.ceil(students.length / studentsPerPage);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag=\"h5\">Manage Batches</CardTitle>\r\n              <p className=\"card-category\">Add and manage batches</p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Button color=\"primary\" onClick={() => setIsFormOpen(true)}>Add Batch</Button>\r\n              {isFormOpen && (\r\n                <Form>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"subject\">Select Subject:</Label>\r\n                        <Input type=\"select\" id=\"subject\" value={selectedSubject} onChange={handleSubjectChange}>\r\n                          <option value=\"\">Select</option>\r\n                          {subjects.map(subject => (\r\n                            <option key={subject._id} value={subject.name}>{subject.name}</option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"batchID\">Batch ID:</Label>\r\n                        <Input type=\"text\" id=\"batchID\" value={newBatch.batchID} disabled />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <FormGroup>\r\n                    <Label>Enroll Students:</Label>\r\n                    {/* No need to display students here, as they will be shown in the TableComponent */}\r\n                  </FormGroup>\r\n                  <Button color=\"success\" onClick={handleSubmit} disabled={!selectedSubject || selectedStudents.length === 0}>Add</Button>\r\n                </Form>\r\n              )}\r\n              <TableComponent\r\n                batches={batches}\r\n                deleteBatch={deleteBatch}\r\n                pageCount={pageCount}\r\n                handlePageClick={handlePageClick}\r\n                studentsPerPage={studentsPerPage}\r\n                studentPage={studentPage}\r\n                handleStudentPageClick={handleStudentPageClick}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BatchManagerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}