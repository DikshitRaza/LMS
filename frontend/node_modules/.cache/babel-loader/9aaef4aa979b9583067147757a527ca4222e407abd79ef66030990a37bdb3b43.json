{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/Tables.js\";\nimport UserPage from \"views/User.js\";\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\nimport BatchManager from \"views/BatchManager.js\";\nimport Courses from \"views/Courses\";\nimport Liveclass from \"views/Liveclass\";\nimport QandA from \"views/QandA\";\nimport UpgradeToPro from \"views/Upgrade.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useUserCategory() {\n  _s();\n  const [userCategory, setUserCategory] = useState(null);\n  useEffect(() => {\n    const fetchUserCategory = async () => {\n      try {\n        const userEmail = sessionStorage.getItem('email');\n        const response = await fetch(\"http://localhost:3001/api/category?email=\".concat(userEmail));\n        const data = await response.json();\n        setUserCategory(data.userCategory);\n      } catch (error) {\n        console.error('Error fetching user category:', error);\n      }\n    };\n    fetchUserCategory();\n  }, []); // Run the effect only once on component mount\n\n  return userCategory;\n}\n_s(useUserCategory, \"aceyfs+HXCLCrft/fIqP2stjnr4=\");\nconst Routes = () => {\n  _s2();\n  const userCategory = useUserCategory();\n\n  // Initial routes without conditional components\n  let routes = [{\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }, {\n    path: \"/Icons\",\n    name: \"Manage Student\",\n    icon: \"nc-icon nc-single-02\",\n    component: Icons,\n    layout: \"/admin\"\n  }, {\n    path: \"/notifications\",\n    name: \"Manage Faculties\",\n    icon: \"nc-icon nc-hat-3\",\n    component: Notifications,\n    layout: \"/admin\"\n  }, {\n    path: \"/user-page\",\n    name: \"Profile\",\n    icon: \"nc-icon nc-bookmark-2\",\n    component: UserPage,\n    layout: \"/admin\"\n  }, {\n    path: \"/ManageCoursePage\",\n    name: \"Manage Course\",\n    icon: \"nc-icon nc-book-bookmark\",\n    component: ManageCoursePage,\n    layout: \"/admin\"\n  }, {\n    path: \"/BatchManager\",\n    name: \"Batch Manage\",\n    icon: \"nc-icon nc-watch-time\",\n    component: BatchManager,\n    layout: \"/admin\"\n  }, {\n    path: \"/tables\",\n    name: \"Manage Schedule\",\n    icon: \"nc-icon nc-calendar-60\",\n    component: TableList,\n    layout: \"/admin\"\n  }, {\n    path: \"/typography\",\n    name: \"Manage Exam\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Typography,\n    layout: \"/admin\"\n  }, {\n    path: \"/Courses\",\n    name: \"My Courses\",\n    icon: \"nc-icon nc-single-copy-04\",\n    component: Courses,\n    layout: \"/admin\"\n  }, {\n    path: \"/QandA\",\n    name: \"Question and Answer\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: QandA,\n    layout: \"/admin\"\n  }];\n\n  // Conditionally include components based on user's category\n  if (userCategory === 'Student') {\n    routes.push({\n      path: \"/Liveclass\",\n      name: \"My Classes\",\n      icon: \"nc-icon nc-time-alarm\",\n      component: Liveclass,\n      layout: \"/admin\"\n    });\n  } else if (userCategory === 'admin') {\n    routes.push({\n      path: \"/upgrade\",\n      name: \"Manage Certification\",\n      icon: \"nc-icon nc-trophy\",\n      component: UpgradeToPro,\n      layout: \"/admin\"\n    });\n  }\n  return routes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    component: route.component,\n    exact: true\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this));\n};\n_s2(Routes, \"cE4P6nv2mLazP8bZSA/HOJb+iFE=\", false, function () {\n  return [useUserCategory];\n});\n_c = Routes;\nexport default Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["React","useState","useEffect","Route","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","useUserCategory","_s","userCategory","setUserCategory","fetchUserCategory","userEmail","sessionStorage","getItem","response","fetch","concat","data","json","error","console","Routes","_s2","routes","path","name","icon","component","layout","push","map","route","index","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/Tables.js\";\r\nimport UserPage from \"views/User.js\";\r\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\r\nimport BatchManager from \"views/BatchManager.js\";\r\nimport Courses from \"views/Courses\";\r\nimport Liveclass from \"views/Liveclass\";\r\nimport QandA from \"views/QandA\";\r\nimport UpgradeToPro from \"views/Upgrade.js\";\r\n\r\nfunction useUserCategory() {\r\n  const [userCategory, setUserCategory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserCategory = async () => {\r\n      try {\r\n        const userEmail = sessionStorage.getItem('email');\r\n        const response = await fetch(`http://localhost:3001/api/category?email=${userEmail}`);\r\n        const data = await response.json();\r\n        setUserCategory(data.userCategory);\r\n      } catch (error) {\r\n        console.error('Error fetching user category:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserCategory();\r\n  }, []); // Run the effect only once on component mount\r\n\r\n  return userCategory;\r\n}\r\n\r\nconst Routes = () => {\r\n  const userCategory = useUserCategory(); \r\n\r\n  // Initial routes without conditional components\r\n  let routes = [\r\n    {\r\n      path: \"/dashboard\",\r\n      name: \"Dashboard\",\r\n      icon: \"nc-icon nc-chart-bar-32\",\r\n      component: Dashboard,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/Icons\",\r\n      name: \"Manage Student\",\r\n      icon: \"nc-icon nc-single-02\",\r\n      component: Icons,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/notifications\",\r\n      name: \"Manage Faculties\",\r\n      icon: \"nc-icon nc-hat-3\",\r\n      component: Notifications,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/user-page\",\r\n      name: \"Profile\",\r\n      icon: \"nc-icon nc-bookmark-2\",\r\n      component: UserPage,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/ManageCoursePage\",\r\n      name: \"Manage Course\",\r\n      icon: \"nc-icon nc-book-bookmark\",\r\n      component: ManageCoursePage,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/BatchManager\",\r\n      name: \"Batch Manage\",\r\n      icon: \"nc-icon nc-watch-time\",\r\n      component: BatchManager,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/tables\",\r\n      name: \"Manage Schedule\",\r\n      icon: \"nc-icon nc-calendar-60\",\r\n      component: TableList,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/typography\",\r\n      name: \"Manage Exam\",\r\n      icon: \"nc-icon nc-ruler-pencil\",\r\n      component: Typography,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/Courses\",\r\n      name: \"My Courses\",\r\n      icon: \"nc-icon nc-single-copy-04\",\r\n      component: Courses,\r\n      layout: \"/admin\",\r\n    },\r\n    {\r\n      path: \"/QandA\",\r\n      name: \"Question and Answer\",\r\n      icon: \"nc-icon nc-bullet-list-67\",\r\n      component: QandA,\r\n      layout: \"/admin\",\r\n    },\r\n  ];\r\n\r\n  // Conditionally include components based on user's category\r\n  if (userCategory === 'Student') {\r\n    routes.push({\r\n      path: \"/Liveclass\",\r\n      name: \"My Classes\",\r\n      icon: \"nc-icon nc-time-alarm\",\r\n      component: Liveclass,\r\n      layout: \"/admin\",\r\n    });\r\n  } else if (userCategory === 'admin') {\r\n    routes.push({\r\n      path: \"/upgrade\",\r\n      name: \"Manage Certification\",\r\n      icon: \"nc-icon nc-trophy\",\r\n      component: UpgradeToPro,\r\n      layout: \"/admin\",\r\n    });\r\n  }\r\n\r\n  return routes.map((route, index) => (\r\n    <Route\r\n      key={index}\r\n      path={route.path}\r\n      component={route.component}\r\n      exact\r\n    />\r\n  ));\r\n}\r\n\r\nexport default Routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}