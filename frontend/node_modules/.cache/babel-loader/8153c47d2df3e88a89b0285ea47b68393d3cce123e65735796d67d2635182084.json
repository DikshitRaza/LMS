{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/Tables.js\";\nimport UserPage from \"views/User.js\";\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\nimport BatchManager from \"views/BatchManager.js\";\nimport Courses from \"views/Courses\";\nimport Liveclass from \"views/Liveclass\";\nimport QandA from \"views/QandA\";\nimport UpgradeToPro from \"views/Upgrade.js\";\n\n// Function to get user's category from session\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getUserCategory() {\n  return sessionStorage.getItem(\"email\");\n}\nconst routes = () => {\n  _s();\n  const [UserType, setUserType] = useState('');\n  useEffect(() => {\n    const fetchUserType = async () => {\n      try {\n        const userEmail = sessionStorage.getItem('email');\n        const response = await fetch(\"http://localhost:8000/api/userType?email=\".concat(userEmail));\n        const data = await response.json();\n        setUserType(data.userType);\n      } catch (error) {\n        console.error('Error fetching user type:', error);\n      }\n    };\n    fetchUserType();\n  }, []); // Run the effect only once on component mount\n\n  // Get user category\n  const userCategory = getUserCategory();\n\n  // Define routes based on user's category\n  const InitialRoutes = [];\n  if (userCategory === 'Student') {\n    InitialRoutes.push({\n      path: \"/Liveclass\",\n      name: \"My Classes\",\n      icon: \"nc-icon nc-time-alarm\",\n      component: /*#__PURE__*/_jsxDEV(Liveclass, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/Courses\",\n      name: \"My Courses\",\n      icon: \"nc-icon nc-single-copy-04\",\n      component: /*#__PURE__*/_jsxDEV(Courses, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/QandA\",\n      name: \"Question and Answer\",\n      icon: \"nc-icon nc-bullet-list-67\",\n      component: /*#__PURE__*/_jsxDEV(QandA, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    });\n  } else if (userCategory === 'admin') {\n    InitialRoutes.push({\n      path: \"/upgrade\",\n      name: \"Manage Certification\",\n      icon: \"nc-icon nc-trophy\",\n      component: /*#__PURE__*/_jsxDEV(UpgradeToPro, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/Icons\",\n      name: \"Manage Student\",\n      icon: \"nc-icon nc-single-02\",\n      component: /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/notifications\",\n      name: \"Manage Faculties\",\n      icon: \"nc-icon nc-hat-3\",\n      component: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/ManageCoursePage\",\n      name: \"Manage Course\",\n      icon: \"nc-icon nc-book-bookmark\",\n      component: /*#__PURE__*/_jsxDEV(ManageCoursePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/BatchManager\",\n      name: \"Batch Manage\",\n      icon: \"nc-icon nc-watch-time\",\n      component: /*#__PURE__*/_jsxDEV(BatchManager, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/tables\",\n      name: \"Manage Schedule\",\n      icon: \"nc-icon nc-calendar-60\",\n      component: /*#__PURE__*/_jsxDEV(TableList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/typography\",\n      name: \"Manage Exam\",\n      icon: \"nc-icon nc-ruler-pencil\",\n      component: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    });\n  } else {\n    // Default route if the user category is neither 'Student' nor 'admin'\n    InitialRoutes.push({\n      path: \"/dashboard\",\n      name: \"Dashboard\",\n      icon: \"nc-icon nc-chart-bar-32\",\n      component: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    }, {\n      path: \"/user-page\",\n      name: \"Profile\",\n      icon: \"nc-icon nc-bookmark-2\",\n      component: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 20\n      }, this),\n      layout: \"/admin\"\n    });\n  }\n  return InitialRoutes;\n};\n_s(routes, \"B4l2D3cQVFNbGvkukHttekUxkpg=\");\nexport default routes;","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","getUserCategory","sessionStorage","getItem","routes","_s","UserType","setUserType","fetchUserType","userEmail","response","fetch","concat","data","json","userType","error","console","userCategory","InitialRoutes","push","path","name","icon","component","fileName","_jsxFileName","lineNumber","columnNumber","layout"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/Tables.js\";\r\nimport UserPage from \"views/User.js\";\r\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\r\nimport BatchManager from \"views/BatchManager.js\";\r\nimport Courses from \"views/Courses\";\r\nimport Liveclass from \"views/Liveclass\";\r\nimport QandA from \"views/QandA\";\r\nimport UpgradeToPro from \"views/Upgrade.js\";\r\n\r\n// Function to get user's category from session\r\nfunction getUserCategory() {\r\n  return sessionStorage.getItem(\"email\");\r\n}\r\n\r\nconst routes = () => {\r\n  const [UserType, setUserType] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const fetchUserType = async () => {\r\n      try {\r\n        const userEmail = sessionStorage.getItem('email');\r\n        const response = await fetch(`http://localhost:8000/api/userType?email=${userEmail}`);\r\n        const data = await response.json();\r\n        setUserType(data.userType);\r\n      } catch (error) {\r\n        console.error('Error fetching user type:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserType();\r\n  }, []); // Run the effect only once on component mount\r\n\r\n  // Get user category\r\n  const userCategory = getUserCategory();\r\n\r\n  // Define routes based on user's category\r\n  const InitialRoutes = [];\r\n\r\n  if (userCategory === 'Student') {\r\n    InitialRoutes.push(\r\n      {\r\n        path: \"/Liveclass\",\r\n        name: \"My Classes\",\r\n        icon: \"nc-icon nc-time-alarm\",\r\n        component: <Liveclass />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/Courses\",\r\n        name: \"My Courses\",\r\n        icon: \"nc-icon nc-single-copy-04\",\r\n        component: <Courses />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/QandA\",\r\n        name: \"Question and Answer\",\r\n        icon: \"nc-icon nc-bullet-list-67\",\r\n        component: <QandA />,\r\n        layout: \"/admin\",\r\n      }\r\n    );\r\n  } else if (userCategory === 'admin') {\r\n    InitialRoutes.push(\r\n      {\r\n        path: \"/upgrade\",\r\n        name: \"Manage Certification\",\r\n        icon: \"nc-icon nc-trophy\",\r\n        component: <UpgradeToPro />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/Icons\",\r\n        name: \"Manage Student\",\r\n        icon: \"nc-icon nc-single-02\",\r\n        component: <Icons />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/notifications\",\r\n        name: \"Manage Faculties\",\r\n        icon: \"nc-icon nc-hat-3\",\r\n        component: <Notifications />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/ManageCoursePage\",\r\n        name: \"Manage Course\",\r\n        icon: \"nc-icon nc-book-bookmark\",\r\n        component: <ManageCoursePage />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/BatchManager\",\r\n        name: \"Batch Manage\",\r\n        icon: \"nc-icon nc-watch-time\",\r\n        component: <BatchManager />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/tables\",\r\n        name: \"Manage Schedule\",\r\n        icon: \"nc-icon nc-calendar-60\",\r\n        component: <TableList />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/typography\",\r\n        name: \"Manage Exam\",\r\n        icon: \"nc-icon nc-ruler-pencil\",\r\n        component: <Typography />,\r\n        layout: \"/admin\",\r\n      }\r\n    );\r\n  } else {\r\n    // Default route if the user category is neither 'Student' nor 'admin'\r\n    InitialRoutes.push(\r\n      {\r\n        path: \"/dashboard\",\r\n        name: \"Dashboard\",\r\n        icon: \"nc-icon nc-chart-bar-32\",\r\n        component: <Dashboard />,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/user-page\",\r\n        name: \"Profile\",\r\n        icon: \"nc-icon nc-bookmark-2\",\r\n        component: <UserPage />,\r\n        layout: \"/admin\",\r\n      }\r\n    );\r\n  }\r\n\r\n  return InitialRoutes;\r\n};\r\n\r\nexport default routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}