{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Dashboard from 'views/Dashboard.js';\nimport Notifications from 'views/Notifications.js';\nimport Icons from 'views/Icons.js';\nimport Typography from 'views/Typography.js';\nimport TableList from 'views/Tables.js';\nimport UserPage from 'views/User.js';\nimport ManageCoursePage from 'views/ManageCoursePage.js';\nimport BatchManager from 'views/BatchManager.js';\nimport Courses from 'views/Courses';\nimport Liveclass from 'views/Liveclass';\nimport QandA from 'views/QandA';\nimport UpgradeToPro from 'views/Upgrade.js';\n\n// Function to get user's category from session\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getUserCategory() {\n  return sessionStorage.getItem('email');\n}\nconst Routes = () => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserType = async () => {\n      try {\n        const userEmail = getUserCategory();\n        const response = await fetch(\"http://localhost:8000/api/userType?email=\".concat(userEmail));\n        const data = await response.json();\n        const userCategory = getUserCategory();\n        let userRoutes = [];\n        if (userCategory === 'Student') {\n          userRoutes = [{\n            path: '/Liveclass',\n            name: 'My Classes',\n            icon: 'nc-icon nc-time-alarm',\n            component: Liveclass,\n            layout: '/admin'\n          }, {\n            path: '/Courses',\n            name: 'My Courses',\n            icon: 'nc-icon nc-single-copy-04',\n            component: Courses,\n            layout: '/admin'\n          }, {\n            path: '/QandA',\n            name: 'Question and Answer',\n            icon: 'nc-icon nc-bullet-list-67',\n            component: QandA,\n            layout: '/admin'\n          }];\n        } else if (userCategory === 'admin') {\n          userRoutes = [{\n            path: '/upgrade',\n            name: 'Manage Certification',\n            icon: 'nc-icon nc-trophy',\n            component: UpgradeToPro,\n            layout: '/admin'\n          }, {\n            path: '/Icons',\n            name: 'Manage Student',\n            icon: 'nc-icon nc-single-02',\n            component: Icons,\n            layout: '/admin'\n          }, {\n            path: '/notifications',\n            name: 'Manage Faculties',\n            icon: 'nc-icon nc-hat-3',\n            component: Notifications,\n            layout: '/admin'\n          }, {\n            path: '/ManageCoursePage',\n            name: 'Manage Course',\n            icon: 'nc-icon nc-book-bookmark',\n            component: ManageCoursePage,\n            layout: '/admin'\n          }, {\n            path: '/BatchManager',\n            name: 'Batch Manage',\n            icon: 'nc-icon nc-watch-time',\n            component: BatchManager,\n            layout: '/admin'\n          }, {\n            path: '/tables',\n            name: 'Manage Schedule',\n            icon: 'nc-icon nc-calendar-60',\n            component: TableList,\n            layout: '/admin'\n          }, {\n            path: '/typography',\n            name: 'Manage Exam',\n            icon: 'nc-icon nc-ruler-pencil',\n            component: Typography,\n            layout: '/admin'\n          }];\n        } else {\n          userRoutes = [{\n            path: '/dashboard',\n            name: 'Dashboard',\n            icon: 'nc-icon nc-chart-bar-32',\n            component: Dashboard,\n            layout: '/admin'\n          }, {\n            path: '/user-page',\n            name: 'Profile',\n            icon: 'nc-icon nc-bookmark-2',\n            component: UserPage,\n            layout: '/admin'\n          }];\n        }\n        setRoutes(userRoutes);\n        setLoading(false); // Data fetching is complete\n      } catch (error) {\n        console.error('Error fetching user type:', error);\n        setLoading(false); // Error occurred while fetching data\n      }\n    };\n    fetchUserType();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this); // Render loading state\n  }\n  return routes;\n};\n_s(Routes, \"9Dq1wUXfUXf/V8iYVTHCRtpeXgU=\");\n_c = Routes;\nexport default Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["React","useEffect","useState","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","getUserCategory","sessionStorage","getItem","Routes","_s","routes","setRoutes","loading","setLoading","fetchUserType","userEmail","response","fetch","concat","data","json","userCategory","userRoutes","path","name","icon","component","layout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Dashboard from 'views/Dashboard.js';\r\nimport Notifications from 'views/Notifications.js';\r\nimport Icons from 'views/Icons.js';\r\nimport Typography from 'views/Typography.js';\r\nimport TableList from 'views/Tables.js';\r\nimport UserPage from 'views/User.js';\r\nimport ManageCoursePage from 'views/ManageCoursePage.js';\r\nimport BatchManager from 'views/BatchManager.js';\r\nimport Courses from 'views/Courses';\r\nimport Liveclass from 'views/Liveclass';\r\nimport QandA from 'views/QandA';\r\nimport UpgradeToPro from 'views/Upgrade.js';\r\n\r\n// Function to get user's category from session\r\nfunction getUserCategory() {\r\n  return sessionStorage.getItem('email');\r\n}\r\n\r\nconst Routes = () => {\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUserType = async () => {\r\n      try {\r\n        const userEmail = getUserCategory();\r\n        const response = await fetch(`http://localhost:8000/api/userType?email=${userEmail}`);\r\n        const data = await response.json();\r\n\r\n        const userCategory = getUserCategory();\r\n\r\n        let userRoutes = [];\r\n\r\n        if (userCategory === 'Student') {\r\n          userRoutes = [\r\n            {\r\n              path: '/Liveclass',\r\n              name: 'My Classes',\r\n              icon: 'nc-icon nc-time-alarm',\r\n              component: Liveclass,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/Courses',\r\n              name: 'My Courses',\r\n              icon: 'nc-icon nc-single-copy-04',\r\n              component: Courses,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/QandA',\r\n              name: 'Question and Answer',\r\n              icon: 'nc-icon nc-bullet-list-67',\r\n              component: QandA,\r\n              layout: '/admin',\r\n            },\r\n          ];\r\n        } else if (userCategory === 'admin') {\r\n          userRoutes = [\r\n            {\r\n              path: '/upgrade',\r\n              name: 'Manage Certification',\r\n              icon: 'nc-icon nc-trophy',\r\n              component: UpgradeToPro,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/Icons',\r\n              name: 'Manage Student',\r\n              icon: 'nc-icon nc-single-02',\r\n              component: Icons,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/notifications',\r\n              name: 'Manage Faculties',\r\n              icon: 'nc-icon nc-hat-3',\r\n              component: Notifications,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/ManageCoursePage',\r\n              name: 'Manage Course',\r\n              icon: 'nc-icon nc-book-bookmark',\r\n              component: ManageCoursePage,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/BatchManager',\r\n              name: 'Batch Manage',\r\n              icon: 'nc-icon nc-watch-time',\r\n              component: BatchManager,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/tables',\r\n              name: 'Manage Schedule',\r\n              icon: 'nc-icon nc-calendar-60',\r\n              component: TableList,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/typography',\r\n              name: 'Manage Exam',\r\n              icon: 'nc-icon nc-ruler-pencil',\r\n              component: Typography,\r\n              layout: '/admin',\r\n            },\r\n          ];\r\n        } else {\r\n          userRoutes = [\r\n            {\r\n              path: '/dashboard',\r\n              name: 'Dashboard',\r\n              icon: 'nc-icon nc-chart-bar-32',\r\n              component: Dashboard,\r\n              layout: '/admin',\r\n            },\r\n            {\r\n              path: '/user-page',\r\n              name: 'Profile',\r\n              icon: 'nc-icon nc-bookmark-2',\r\n              component: UserPage,\r\n              layout: '/admin',\r\n            },\r\n          ];\r\n        }\r\n\r\n        setRoutes(userRoutes);\r\n        setLoading(false); // Data fetching is complete\r\n      } catch (error) {\r\n        console.error('Error fetching user type:', error);\r\n        setLoading(false); // Error occurred while fetching data\r\n      }\r\n    };\r\n\r\n    fetchUserType();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Render loading state\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nexport default Routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}