{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\views\\\\Icons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import useEffect here\nimport { Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = () => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:3001/api/users');\n      const data = await response.json();\n      setTableData(data);\n    };\n    fetchData().catch(console.error);\n  }, []); // The empty array ensures this effect runs once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useState","useEffect","Table","jsxDEV","_jsxDEV","TableComponent","_s","tableData","setTableData","fetchData","response","fetch","data","json","catch","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","username","phone","email","category","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/views/Icons.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Import useEffect here\r\nimport { Table } from 'reactstrap';\r\n\r\nconst TableComponent = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('http://localhost:3001/api/users');\r\n      const data = await response.json();\r\n      setTableData(data);\r\n    };\r\n\r\n    fetchData().catch(console.error);\r\n  }, []); // The empty array ensures this effect runs once after the initial render\r\n\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Category</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableData.map((row, index) => (\r\n          <tr key={index}> {/* Using the index as a key is generally okay for static lists but consider a unique identifier for dynamic lists */}\r\n            <td>{row.username}</td>\r\n            <td>{row.phone}</td>\r\n            <td>{row.email}</td>\r\n            <td>{row.category}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,KAAK,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC;IAEDH,SAAS,CAAC,CAAC,CAACK,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA,CAACF,KAAK;IAAAe,QAAA,gBACJb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBjB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdjB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdjB,OAAA;UAAAa,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRjB,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACxBpB,OAAA;QAAAa,QAAA,GAAgB,GAAC,eACfb,OAAA;UAAAa,QAAA,EAAKM,GAAG,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBjB,OAAA;UAAAa,QAAA,EAAKM,GAAG,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBjB,OAAA;UAAAa,QAAA,EAAKM,GAAG,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBjB,OAAA;UAAAa,QAAA,EAAKM,GAAG,CAACK;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJhBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACf,EAAA,CAnCID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}