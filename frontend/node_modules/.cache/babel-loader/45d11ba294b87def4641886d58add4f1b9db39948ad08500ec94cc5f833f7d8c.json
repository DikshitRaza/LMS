{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\routes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/Tables.js\";\nimport UserPage from \"views/User.js\";\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\nimport BatchManager from \"views/BatchManager.js\";\nimport Courses from \"views/Courses\";\nimport Liveclass from \"views/Liveclass\";\nimport QandA from \"views/QandA\";\nimport UpgradeToPro from \"views/Upgrade.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routes = () => {\n  _s();\n  const [userType, setUserType] = useState('');\n  useEffect(() => {\n    const userEmail = sessionStorage.getItem('email');\n    const fetchUserType = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/api/userType?email=\".concat(userEmail));\n        const data = await response.json();\n        setUserType(data.userType);\n      } catch (error) {\n        console.error('Error fetching user type:', error);\n      }\n    };\n    fetchUserType();\n  }, []); // Run the effect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userType === 'Student' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/icons\",\n        children: /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notifications\",\n        children: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/liveclass\",\n        children: /*#__PURE__*/_jsxDEV(Liveclass, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), userType === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/icons\",\n        children: /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notifications\",\n        children: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/upgrade\",\n        children: /*#__PURE__*/_jsxDEV(UpgradeToPro, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(routes, \"kBbCzzYXN5wTMKcjt8pH8vOKc1k=\");\nexport default routes;","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Notifications","Icons","Typography","TableList","UserPage","ManageCoursePage","BatchManager","Courses","Liveclass","QandA","UpgradeToPro","jsxDEV","_jsxDEV","Fragment","_Fragment","routes","_s","userType","setUserType","userEmail","sessionStorage","getItem","fetchUserType","response","fetch","concat","data","json","error","console","children","Route","path","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/routes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/Tables.js\";\r\nimport UserPage from \"views/User.js\";\r\nimport ManageCoursePage from \"views/ManageCoursePage.js\";\r\nimport BatchManager from \"views/BatchManager.js\";\r\nimport Courses from \"views/Courses\";\r\nimport Liveclass from \"views/Liveclass\";\r\nimport QandA from \"views/QandA\";\r\nimport UpgradeToPro from \"views/Upgrade.js\";\r\n\r\nconst routes = () => {\r\n  const [userType, setUserType] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userEmail = sessionStorage.getItem('email');\r\n\r\n    const fetchUserType = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/api/userType?email=${userEmail}`);\r\n        const data = await response.json();\r\n\r\n        setUserType(data.userType);\r\n      } catch (error) {\r\n        console.error('Error fetching user type:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserType();\r\n  }, []); // Run the effect only once on component mount\r\n\r\n  return (\r\n    <>\r\n      {userType === 'Student' && (\r\n        <>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/icons\">\r\n            <Icons />\r\n          </Route>\r\n          <Route path=\"/notifications\">\r\n            <Notifications />\r\n          </Route>\r\n          {/* Add other routes for student here */}\r\n          <Route path=\"/liveclass\">\r\n            <Liveclass />\r\n          </Route>\r\n        </>\r\n      )}\r\n      {userType === 'admin' && (\r\n        <>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/icons\">\r\n            <Icons />\r\n          </Route>\r\n          <Route path=\"/notifications\">\r\n            <Notifications />\r\n          </Route>\r\n          {/* Add other routes for admin here */}\r\n          <Route path=\"/upgrade\">\r\n            <UpgradeToPro />\r\n          </Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default routes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}